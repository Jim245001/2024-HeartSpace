@using HeartSpace.Models
@using Dapper
@model HomePageViewModel

@{
    ViewData["Title"] = "首頁";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .index-post-card-container .post-card-wrapper {
        width: 100%;
        height: 300px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .index-post-card-container .post-card-wrapper > * {
            transform: scale(0.75);
            transform-origin: center;
        }
</style>

<div class="container-fluid px-0">
    <div class="row mx-0">
        <!-- 貼文版 -->
        <div class="col-md-6 px-1">
            <div class="card">
                <div class="card-header text-center">貼文版</div>
                <div class="card-body">
                    <div class="btn-group mb-3 w-100">
                        <button class="btn btn-secondary btn-sm">最新</button>
                        <button class="btn btn-secondary btn-sm">分類</button>
                    </div>

                    <div class="row gx-1 gy-2 index-post-card-container">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="col-6">
                                <a href="@Url.Action("PostDetails", "Post", new { id = post.Id })" class="text-decoration-none">
                                    <div class="post-card-wrapper">
                                        @Html.Partial("_PostCard", post)
                                    </div>
                                </a>
                            </div>
                        }
                    </div>

                    <nav>
                        <ul class="pagination justify-content-center mt-3">
                            @if (Model.Posts.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = Model.Posts.PageIndex - 1, eventPage = Model.Events.PageIndex })">Previous</a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.Posts.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Posts.PageIndex ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = i, eventPage = Model.Events.PageIndex })">@i</a>
                                </li>
                            }

                            @if (Model.Posts.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = Model.Posts.PageIndex + 1, eventPage = Model.Events.PageIndex })">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>

        <!-- 揪團版 -->
        <div class="col-md-6 px-1">
            <div class="card">
                <div class="card-header text-center">揪團版</div>
                <div class="card-body">
                    <div class="btn-group mb-3 w-100">
                        <button class="btn btn-secondary btn-sm">最新</button>
                        <button class="btn btn-secondary btn-sm">分類</button>
                    </div>

                    <div class="row gx-1 gy-2">
                        @foreach (var events in Model.Events)
                        {
                            <div class="col-6">
                                <a href="@Url.Action("EventDetail", "Event", new { id = events.Id })" class="text-decoration-none">
                                    <div class="card border-0 shadow-sm d-flex align-items-center justify-content-center" style="height: 300px;">
                                        @Html.Raw(new EventCard(
                                            events.EventName,
                                            events.MemberName,
                                            events.Location,
                                            events.Description,
                                            events.EventTime,
                                            events.MemberProfileImgUrl,
                                            events.ImgUrl
                                        ).RenderHtml())
                                    </div>
                                </a>
                            </div>
                        }
                    </div>

                    <nav>
                        <ul class="pagination justify-content-center mt-3">
                            @if (Model.Events.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = Model.Posts.PageIndex, eventPage = Model.Events.PageIndex - 1 })">Previous</a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.Events.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Events.PageIndex ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = Model.Posts.PageIndex, eventPage = i })">@i</a>
                                </li>
                            }

                            @if (Model.Events.HasNextPage)  
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { postPage = Model.Posts.PageIndex, eventPage = Model.Events.PageIndex + 1 })">Next</a>
                                </li>
                            } 
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
